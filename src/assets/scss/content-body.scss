@use 'mixins';

// content-body markdown style

$ratios: '2/1', '1/2', '6/4', '4/6', '4/3', '3/4', '16/9', '21/9';

.content-body {
  // typography
  --mk-color-base: var(--markdown-color-base, var(--color-base));
  --mk-color-title: var(--markdown-color-title, var(--color-base));
  --mk-color-key: var(--markdown-color-key, var(--color-key-1));
  --mk-size-text: var(--markdown-size-text, .938rem);
  --mk-size-text-length: var(--markdown-size-text-length, 1.56);
  --mk-size-side-padding: var(--markdown-size-side-padding, 24px);

  // margin
  --mk-size-margin: var(--markdown-size-margin, 1.5rem);

  // heading
  --mk-hd-scroll-margin-top: var(--markdown-head-scroll-margin-top, unset);

  // img
  --mk-size-img-margin: var(--markdown-size-img-margin, #{1.5rem 0});

  // code
  --mk-color-code-text: var(--markdown-color-code-text, var(--color-key-3));
  --mk-color-code-bg: var(--markdown-color-code-bg, hsl(0 0% 100%));

  // blockquote
  --mk-color-blockquote-bg: var(--markdown-color-blockquote-bg, transparent);
  --mk-color-blockquote-outline: var(--markdown-color-blockquote-outline, hsl(0 0% 65%));
  --mk-color-blockquote-line: var(--markdown-color-blockquote-line, var(--mk-color-key));
  --mk-size-blockquote-line: var(--markdown-size-blockquote-line, 6px);
  --mk-size-blockquote-padding: var(--markdown-size-blockquote-line, 1.25rem);

  // table
  --mk-color-table-line: var(--markdown-color-table-line, hsl(0 0% 82%));
  --mk-color-table-head-bg: var(--markdown-color-table-head-bg, hsl(0 0% 95%));

  // hr
  --mk-size-hr-margin: var(--markdown-size-hr-margin, #{5rem 0});
  --mk-size-hr-text: var(--markdown-size-hr-text, 12px);
  --mk-color-hr-text: var(--markdown-color-hr-text, --mk-color-base);

  font-size: var(--mk-size-text);
  line-height: var(--mk-size-text-length);
  color: var(--mk-color-base);

  :where(h1, h2, h3, h4, h5, h6) {
    position: relative;
    scroll-margin-top: var(--mk-hd-scroll-margin-top);
    color: var(--mk-color-title);
    .anchor {
      display: block;
      position: absolute;
      left: -42px;
      top: 50%;
      opacity: 0;
      transition: opacity 100ms ease-out;
      transform: translateY(-50%);
      padding: 10px;
      box-sizing: border-box;
      svg {
        display: block;
        width: 20px;
        aspect-ratio: 1 / 1;
        stroke-width: 1.75;
      }
      @media (hover: hover) {
        &:hover {
          opacity: 1;
        }
      }
    }
  }
  :where(h1, h2, h3) {
    margin: calc(var(--mk-size-margin) * 2) 0 calc(var(--mk-size-margin) * 1);
    font-weight: 800;
    line-height: 1.15;
  }
  :where(h4, h5, h6) {
    margin: calc(var(--mk-size-margin) * 1.25) 0 calc(var(--mk-size-margin) * .75);
    font-weight: 600;
    line-height: 1.25;
  }
  h1 { font-size: 2.25em; letter-spacing: -.01em; }
  h2 { font-size: 2em; letter-spacing: -.01em; }
  h3 { font-size: 1.75em; letter-spacing: -.005em; }
  h4 { font-size: 1.5em; letter-spacing: -.005em; }
  h5 { font-size: 1.25em; }
  h6 { font-size: 1em; }
  p {
    margin: var(--mk-size-margin) 0;
    word-break: keep-all;
    overflow-wrap: break-word;
  }
  a {
    color: var(--mk-color-key);
  }
  hr {
    display: block;
    margin: var(--mk-size-hr-margin);
    padding: 0;
    border: none;
    &:after {
      content: '●●●';
      display: block;
      text-align: center;
      font-family: Georgia, Cambria, 'Times New Roman', Times, serif;
      font-size: var(--mk-size-hr-text);
      letter-spacing: .75em;
      line-height: 1.15;
      font-weight: 800;
      color: var(--mk-color-hr-text);
    }
  }
  table {
    margin: var(--mk-size-margin) 0;
    border-collapse: collapse;
    box-sizing: border-box;
    :where(th, td) {
      padding: .5rem 1rem;
      border: 1px solid var(--mk-color-table-line);
      box-sizing: border-box;
    }
    thead :where(th, td) {
      background-color: var(--mk-color-table-head-bg);
    }
    tbody td {
      word-break: keep-all;
      word-wrap: break-word;
    }
  }
  a {
    word-break: break-all;
  }
  code {
    color: var(--mk-color-code-text);
    font-family: 'Monaco', 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
    font-size: 92%;
    white-space: break-spaces;
    font-weight: 600;
  }
  pre {
    margin: var(--mk-size-margin) 0;
    padding: 24px;
    background: var(--mk-color-code-bg);
    font-size: calc(1em - 1px);
    line-height: 1.5;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    border-radius: 4px;
    box-shadow: 0 4px 36px hsl(0 0% 0% / 8%), 0 8px 24px hsl(0 0% 0% / 16%);
    color-scheme: dark;
    box-sizing: border-box;
    @include mixins.custom-scrollbar();
    > code {
      margin: 0;
      padding: 0;
      background: none;
      white-space: pre;
      border-radius: 0;
      color: var(--color-base);
      font-size: .875em;
      font-weight: 400;
      line-height: 1.68;
    }
  }
  input[type=checkbox] {
    margin-right: 3px;
  }
  iframe {
    display: block;
    margin: var(--mk-size-img-margin);
    max-width: 100%;
  }
  .iframe {
    position: relative;
    margin: var(--mk-size-img-margin);
    aspect-ratio: 16 / 9;
    > iframe {
      width: 100%;
      height: 100%;
    }
  }
  embed {
    display: block;
    max-width: 100%;
    margin: var(--mk-size-img-margin);
  }
  blockquote {
    position: relative;
    margin: var(--mk-size-margin) 0;
    padding: var(--mk-size-blockquote-padding) var(--mk-size-blockquote-padding) var(--mk-size-blockquote-padding) calc(var(--mk-size-blockquote-padding) + var(--mk-size-blockquote-line));
    box-shadow: inset 0 0 0 .5px var(--mk-color-blockquote-outline);
    box-sizing: border-box;
    border-radius: 0 8px 8px 0;
    background-color: var(--mk-color-blockquote-bg);
    &:after {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      bottom: 0;
      width: var(--mk-size-blockquote-line);
      background-color: var(--mk-color-blockquote-line);
    }
    > * {
      margin: 1rem 0;
      &:first-child {
        margin-top: 0;
      }
      &:last-child {
        margin-bottom: 0;
      }
    }
  }
  video {
    display: block;
    margin: var(--mk-size-img-margin);
    max-width: 100%;
  }

  // image
  --image-width: 100vw;
  :where(img, .grid-item) {
    display: block;
    font-size: 9px;
    word-break: break-all;
    position: relative;
    margin: var(--mk-size-img-margin);
    max-width: 100%;
  }

  // ul
  :where(ul, ol) {
    margin: var(--mk-size-margin) 0;
    padding-left: 1.125rem;
    > li {
      margin: .2rem 0;
      > * {
        margin: .2rem 0;
      }
    }
  }

  :is(h1, h2, h3, h4, h5, h6) + * {
    margin-top: 0;
  }

  // first and last elements
  > *:first-child,
  > *:first-child *:first-child {
    margin-top: 0;
  }
  > *:last-child,
  > *:last-child *:last-child {
    margin-bottom: 0;
  }

  // grid
  .grid-item {
    --grid-item-columns: 1;
    --grid-item-gap: 10px;
    --grid-item-ratio: unset;
    display: grid;
    grid-template-columns: repeat(var(--grid-item-columns, 1), 1fr);
    grid-gap: var(--grid-item-gap);
    > p {
      position: relative;
      margin: 0;
      box-sizing: border-box;
      grid-column: var(--grid-column, auto);
      aspect-ratio: var(--grid-item-ratio, 1 / 1);
      > img {
        position: static;
        margin: 0;
        width: 100%;
        height: 100%;
        max-width: none;
        max-height: none;
        transform: none;
        box-sizing: border-box;
        object-fit: cover;
      }
    }
    @for $i from 1 through 4 {
      &[data-column="#{$i}"] { --grid-item-columns: #{$i}; }
    }
    @each $ratio in $ratios {
      &[data-ratio="#{$ratio}"] { --grid-item-ratio: #{$ratio}; }
    }
    &:first-child {
      margin-top: 0;
    }
    &:last-child {
      margin-bottom: 0;
    }
  }
  .grid-group {
    margin: var(--mk-size-img-margin);
    > .grid-item {
      margin-top: var(--grid-item-gap);
      margin-bottom: var(--grid-item-gap);
      &:first-child {
        margin-top: 0;
      }
      &:last-child {
        margin-bottom: 0;
      }
    }
  }
}
